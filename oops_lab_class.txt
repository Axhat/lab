#include<iostream>
#include<string.h>
using namespace std;
class Student
{
private:
    int rno;
    char name[40];
public:
    // Inline function to get details of student.
    void getData()
    {
        cout<<"\nPlease enter the name of the student ";
        gets(name);
    }
    
    void assignRoll(int n)
    {
    	rno = n;
	}
    
    //Function to get roll number of a student
    int getRollNum()
    {
    	return rno;
	}
    
    //Function declaration outside the class.
    void putData();
};

//Function to print data of student.
void Student::putData()
{
    cout<<"\nThe name of the student is "<<name;
    cout<<"\nThe roll number of the student is "<<rno;
}

//Class to implement all student operations.
class StudentOperations
{
private:
	Student studentArray[20];
	int size;
public:
	StudentOperations(int n)
	{
		size = n;
	}
	void takeInput();
	void printData();
	void findStudent(int rollnum);
	bool checkRoll(int i,int n);
};

//Function to check if roll number already exists or not.
bool StudentOperations::checkRoll(int i,int n)
{
	for(int j = 0;j<i;j++)
	{	
		if(studentArray[j].getRollNum() == n)
		{
			return true;
		}
	}
	return false;
}

//Function to input details of all the students and store them in array.
void StudentOperations::takeInput()
{
	int n;
	int status = 1;
	for(int i = 0;i<size;i++)
	{
		cout<<"\nPlease enter the details of student no. "<<i+1;
		cout<<"\nPlease enter the roll number of the student ";
		cin>>n;
		getchar();
		while(checkRoll(i,n))
		{
			cout<<"\nThe entered roll number already exists.";
			cout<<"\nPlease re-enter the roll number ";
			cin>>n;
			getchar();
		}
		studentArray[i].assignRoll(n);
		studentArray[i].getData();
	}
}

//Function to print details of all the students stored in the array
void StudentOperations::printData()
{
	for(int i = 0;i<size;i++)
	{
		cout<<"\nThe details of student no. "<<i+1<<" are as follows:";
		studentArray[i].putData();
	}
}

//Function to find student based on roll number given by the user.
void StudentOperations::findStudent(int rollnum)
{
	int flag = 1;
	for(int i = 0;i<size;i++)
	{
		if(studentArray[i].getRollNum()==rollnum)
		{
			cout<<"\nStudent Found";
			cout<<"\nThe details of the student are as follows:";
			studentArray[i].putData();
			flag = 0;
			break;
		}
	}
	if(flag)
	{
		cout<<"\nStudent not found.Please check your details and try again.";
	}
}

int main()
{	
    int n;
    cout<<"Please enter the number of students whose data you want to enter ";
    cin>>n;
    getchar();
    StudentOperations op1(n);
    op1.takeInput();
    op1.printData();
    int rollnum;
    cout<<"\nPlease enter the roll number of the student you want to search for ";
    cin>>rollnum;
    op1.findStudent(rollnum);
	return 0;
}